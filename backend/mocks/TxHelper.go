// Code generated by mockery v2.41.0. DO NOT EDIT.

package mocks

import (
	context "context"

	database "github.com/Dominic0512/serverless-auth-boilerplate/infra/database"

	mock "github.com/stretchr/testify/mock"
)

// TxHelper is an autogenerated mock type for the TxHelper type
type TxHelper struct {
	mock.Mock
}

// WithTx provides a mock function with given fields: ctx, fn
func (_m *TxHelper) WithTx(ctx context.Context, fn func(database.Tx) error) error {
	ret := _m.Called(ctx, fn)

	if len(ret) == 0 {
		panic("no return value specified for WithTx")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, func(database.Tx) error) error); ok {
		r0 = rf(ctx, fn)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewTxHelper creates a new instance of TxHelper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTxHelper(t interface {
	mock.TestingT
	Cleanup(func())
}) *TxHelper {
	mock := &TxHelper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
